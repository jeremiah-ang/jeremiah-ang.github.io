{"version":3,"sources":["commons.js","Connections.js","DataContainer.js","GitVisualisation.js","App.js","serviceWorker.js","index.js"],"names":["theme","red","yellow","blue","green","darkRed","darkYellow","darkBlue","darkGreen","grey","historyHeight","historyMarginBottom","historyCircleWidth","historyCircleBorderLeft","historyCircleMarginTop","historyControlWidth","columnMarginRight","dimensions","circleOffsetX","circleOffsetY","circleMarginX","circleMarginY","historyMarginY","NiceButton","styled","div","fallDownAnimation","keyframes","draw","ButtonForm","e","this","props","onClick","isHidden","handleClick","bind","buttonName","Component","ConnectionsElm","svg","AnimatedPath","path","AnimatedLine","line","Point","x","y","point2","p1","p2","curve","curvePower","GitConnections","circle","column","row","circlePairs","map","circlePair","parentCircle","key","nodeId","circleToPoint","parentNodePoint","nodePoint","curveto","c1","c2","x1","y1","x2","y2","fill","stroke","strokeWidth","pathStr","d","NodeStateEnum","Node","parentNodeIds","branchId","mergedToBranch","state","Set","console","log","mergeFromNode","Math","max","mergeToNode","mergeToNodeBranchId","add","Circle","dom","Branch","nodeIds","rowOffset","newNodeIds","pop","Git","Copy","color","History","StageButton","disabled","StageControls","StageControl","HistoryColumn","HistoryCircle","isCheckout","circleColors","columnNth","length","HistoryControl","ConnectionsContainer","GitVisualisation","branchIds","circles","shortid","generate","rootNodeId","checkoutNodeId","branch","rootNode","commit","checkout","checkoutNode","push","parentNodeId","setState","_","parentNodeRow","grandParentNodeId","node","updateCheckout","childCommit","addNode","parentNode","branchNodeId","branchNode","mergeTo","newNodeId","newNode","updateDict","currentCheckoutNode","currentCheckoutNodeParent","currentCheckoutNodeBranch","othersCheckout","undefined","mergeFromNodeId","mergeToNodeId","merge","mergeToBranch","connectionsContainer","Object","keys","forEach","values","gitConnections","ReactDOM","render","$this","copyBranchHistoryNodes","checkoutBranchId","historyNode","onBranchNode","onCommitNode","commitNode","onCheckout","setCheckout","onMerge","mergeNode","historyCircleRef","addNodeCircleDom","isBranchable","nodeState","isMergable","has","branches","ref","connectionsContainerRef","drawConnections","GitTable","index","nth","HistoryNode","adds","deletes","onBranch","onCommit","onAdd","onDelete","isClosedForChanges","commitForm","FileChangesForm","isControlsHidden","changeCount","count","BranchForm","CommitForm","CheckoutForm","MergeForm","StageForm","stageButton","StageAddForm","StageDeleteForm","App","Boolean","window","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.31592155.chunk.js","sourcesContent":["import styled, {keyframes} from 'styled-components';\r\nimport React, {Component} from 'react';\r\n\r\nexport const theme = {\r\n    red: '#F96654',\r\n    yellow: '#FABC55',\r\n    blue: '#4088C7',\r\n    green: '#34B362',\r\n    darkRed: '#C75344',\r\n    darkYellow: '#C79544',\r\n    darkBlue: '#2F6594',\r\n    darkGreen: '#136632',\r\n    grey: '#EEE',\r\n  \r\n    historyHeight: 55,\r\n    historyMarginBottom: 15,\r\n    historyCircleWidth: 20,\r\n    historyCircleBorderLeft: 3,\r\n    historyCircleMarginTop: 5,\r\n    historyControlWidth: 80, \r\n  \r\n    columnMarginRight: 15,\r\n}\r\ntheme['circleColors'] = [theme.blue, theme.green, theme.yellow, theme.red];\r\ntheme['circleBorders'] = [theme.darkBlue, theme.darkGreen, theme.darkYellow, theme.darkRed];\r\n\r\nexport const dimensions = {\r\n  circleOffsetX: theme.historyCircleBorderLeft + theme.historyCircleWidth/2,\r\n  circleOffsetY: theme.historyCircleMarginTop + theme.historyCircleWidth/2,\r\n  circleMarginX: 1.5 * theme.historyCircleWidth + theme.historyCircleBorderLeft + theme.historyControlWidth + theme.columnMarginRight,\r\n  circleMarginY: theme.historyHeight + theme.historyMarginBottom,\r\n  historyMarginY: theme.historyHeight + theme.historyMarginBottom,\r\n}\r\ndimensions['curvePower'] = dimensions.circleMarginX / 1.75;\r\n\r\nexport const NiceButton = styled.div`\r\n  border: #7986cb solid 1px;\r\n  font-family: sans-serif;\r\n  color: #7986cb;\r\n  border-radius: 100px;\r\n  padding: 3px 10px;\r\n  margin-bottom: 2px;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-size: 10px;\r\n  background-color: white;\r\n\r\n  &:hover {\r\n    color: #8C5167;\r\n    border: #8C5167 solid 1px;\r\n  }\r\n`;\r\n\r\nexport const fallDownAnimation = keyframes`\r\n    to {\r\n      transform: translate(0, 0);\r\n    }\r\n`;\r\n\r\nexport const draw = keyframes`\r\n    to {\r\n        stroke-dashoffset: 0;   \r\n    }\r\n`;\r\n\r\nexport class ButtonForm extends Component {\r\n  handleClick(e) {\r\n    this.props.onClick();\r\n  }\r\n\r\n  render() {\r\n    if (this.props.isHidden) {\r\n      return <div></div>\r\n    }\r\n    return <div>\r\n      <NiceButton onClick={this.handleClick.bind(this)}>{this.buttonName}</NiceButton>\r\n    </div>\r\n  }\r\n};\r\n","import React, {Component} from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport {dimensions, draw} from './commons'\r\n\r\nconst ConnectionsElm = styled.svg`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -10;\r\n`;\r\nconst AnimatedPath = styled.path`\r\n    stroke-dasharray: 5000;\r\n    stroke-dashoffset: 5000;\r\n    animation: ${draw} 5s linear forwards;\r\n`;\r\n\r\nconst AnimatedLine = styled.line`\r\n    stroke-dasharray: 500;\r\n    stroke-dashoffset: 500;\r\n    animation: ${draw} .5s linear forwards;\r\n`;\r\n\r\nclass Point {\r\n  constructor(x, y) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n\r\n  curveto(point2) {\r\n    const [p1, p2] = (this.y < point2.y) ? [this, point2] : [point2, this];\r\n    const curve = ((this.x < point2.x) ? 1 : -1) * dimensions.curvePower;\r\n    return [\r\n      p1,\r\n      new Point(p1.x + curve, p1.y),\r\n      new Point(p2.x - curve, p2.y),\r\n      p2,\r\n    ]\r\n  }\r\n}\r\n\r\nexport class GitConnections extends Component {\r\n    circleToPoint(circle) {\r\n        const x = dimensions.circleOffsetX + circle.column * dimensions.circleMarginX;\r\n        const y = dimensions.circleOffsetY + circle.row * dimensions.circleMarginY;\r\n        return new Point(x, y);\r\n    }\r\n\r\n    render() {\r\n        return <ConnectionsElm>\r\n        { this.props.circlePairs.map(circlePair => {\r\n            const [parentCircle, circle] = circlePair;\r\n            if (!parentCircle) return <path key={circle.nodeId}></path>;\r\n            const [parentNodePoint, nodePoint] = circlePair.map(circle => this.circleToPoint(circle));\r\n            const [p1, c1, c2, p2] = parentNodePoint.curveto(nodePoint);\r\n            const key = `${circle.nodeId}->${parentCircle.nodeId}`;\r\n            if (circle.column === parentCircle.column) {\r\n            return <AnimatedLine\r\n                key={key}\r\n                x1={p1.x} y1={p1.y}\r\n                x2={p2.x} y2={p2.y}\r\n                fill='none'\r\n                stroke='black'\r\n                strokeWidth='1'\r\n            ></AnimatedLine>\r\n            }\r\n            const pathStr = `M${p1.x},${p1.y} C${c1.x},${c1.y} ${c2.x},${c2.y} ${p2.x},${p2.y}`;\r\n            return <AnimatedPath\r\n                key={key}\r\n                d={pathStr}\r\n                fill='none'\r\n                stroke='black'\r\n                strokeWidth='1'\r\n            />\r\n        })\r\n        }\r\n        </ConnectionsElm>\r\n    }\r\n}","export const NodeStateEnum = {\r\n  Created: 1,\r\n  OpenToChanges: 2,\r\n  MakingChanges: 3,\r\n  MadeChanges: 4,\r\n}\r\n\r\nexport class Node {\r\n    constructor(nodeId, parentNodeIds, branchId, row, mergedToBranch, state=NodeStateEnum.Created) {\r\n        this.nodeId = nodeId;\r\n        this.parentNodeIds = parentNodeIds;\r\n        this.branchId = branchId; \r\n        this.row = row;\r\n        this.mergedToBranch = mergedToBranch || new Set();\r\n        this.state = state;\r\n    }\r\n\r\n    commit() {\r\n        if (this.state !== NodeStateEnum.Created) {\r\n        console.log(`[${this.nodeId}] Cannot Commit! State error: ${this.state}`);\r\n        return this;\r\n        }\r\n        console.log(`[${this.nodeId}] commit, new state = ${NodeStateEnum.OpenToChanges}`);\r\n        return new Node(this.nodeId, this.parentNodeIds, this.branchId, this.row, this.mergedToBranch, NodeStateEnum.OpenToChanges);\r\n    }\r\n\r\n    checkout() {\r\n        if (this.state !== NodeStateEnum.OpenToChanges) {\r\n        console.log(`[${this.nodeId}] Cannot checkout! State error: ${this.state}`);\r\n        return this;\r\n        }\r\n        console.log(`[${this.nodeId}] checkout, new state = ${NodeStateEnum.MakingChanges}`);\r\n        return new Node(this.nodeId, this.parentNodeIds, this.branchId, this.row, this.mergedToBranch, NodeStateEnum.MakingChanges);\r\n    }\r\n\r\n    othersCheckout() {\r\n        if (this.state !== NodeStateEnum.MakingChanges) {\r\n        console.log(`[${this.nodeId}] Cannot others checkout! State error: ${this.state}`);\r\n        return this;\r\n        }\r\n        console.log(`[${this.nodeId}] Others checkedout, new state = ${NodeStateEnum.OpenToChanges}`);\r\n        return new Node(this.nodeId, this.parentNodeIds, this.branchId, this.row, this.mergedToBranch, NodeStateEnum.OpenToChanges);\r\n    }\r\n\r\n    childCommit() {\r\n        if (this.state !== NodeStateEnum.MakingChanges) {\r\n        console.log(`[${this.nodeId}] Cannot make changes! State error: ${this.state}`);\r\n        return this;\r\n        }\r\n        console.log(`[${this.nodeId}] Child Commit, new state = ${NodeStateEnum.MadeChanges}`);\r\n        return new Node(this.nodeId, this.parentNodeIds, this.branchId, this.row, this.mergedToBranch, NodeStateEnum.MadeChanges);\r\n    }\r\n\r\n    merge(mergeFromNode) {\r\n        if (this.state !== NodeStateEnum.Created) {\r\n        console.log(`[${this.nodeId}] Cannot merge! State error: ${this.state}`);\r\n        }\r\n        console.log(`[${this.nodeId}] merge, new state = ${NodeStateEnum.MadeChanges}`);\r\n        const row = Math.max(mergeFromNode.row, this.row - 1) + 1;\r\n        return new Node(this.nodeId, {...this.parentNodeIds, [mergeFromNode.branchId]: mergeFromNode.nodeId}, this.branchId, row, this.mergedToBranch, NodeStateEnum.MakingChanges);\r\n    }\r\n\r\n    mergeTo(mergeToNode) {\r\n        const mergeToNodeBranchId = mergeToNode.branchId;\r\n        const mergedToBranch = new Set(this.mergedToBranch)\r\n        mergedToBranch.add(mergeToNodeBranchId);\r\n        return new Node(this.nodeId, this.parentNodeIds, this.branchId, this.row, mergedToBranch, this.state);\r\n    }\r\n}\r\n\r\n\r\nexport class Circle {\r\n    constructor(nodeId, dom, row, column) {\r\n        this.nodeId = nodeId;\r\n        this.dom = dom;\r\n        this.row = row;\r\n        this.column = column;\r\n    }\r\n}\r\n  \r\nexport class Branch {\r\n    constructor(branchId, nodeIds, rowOffset, column) {\r\n        this.branchId = branchId;\r\n        this.nodeIds = nodeIds || [];\r\n        this.rowOffset = rowOffset;\r\n        this.column = column;\r\n    }\r\n\r\n    addNode(nodeId) {\r\n        return new Branch(this.branchId, [...this.nodeIds, nodeId], this.rowOffset, this.column);\r\n    }\r\n\r\n    pop() {\r\n        const newNodeIds = [...this.nodeIds];\r\n        newNodeIds.pop();\r\n        return new Branch(this.branchId, newNodeIds, this.rowOffset, this.column);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport styled from 'styled-components';\r\nimport shortid from 'shortid';\r\n\r\nimport {dimensions, NiceButton, ButtonForm, fallDownAnimation} from './commons';\r\nimport {GitConnections} from './Connections';\r\nimport {NodeStateEnum, Node, Branch, Circle} from './DataContainer';\r\n\r\n\r\nconst Git = styled.div`\r\n  white-space: nowrap;\r\n  font-family: sans-serif;\r\n  padding: 0px;\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst Copy = styled.div`\r\n  color: ${props => props.color || 'black'};\r\n  display: inline-block;\r\n  vertical-align:top;\r\n  padding: 0px;\r\n  padding-top: ${props => (props.rowOffset * dimensions.historyMarginY) + 'px'};\r\n  margin-right: ${props => (props.theme.columnMarginRight) + 'px'};\r\n`\r\n\r\nconst History = styled.div`\r\n  margin-bottom: ${props => (props.theme.historyMarginBottom) + 'px'};\r\n  height: ${props => (props.theme.historyHeight) + 'px'};\r\n  margin-top: ${props => (props.rowOffset > 0) ? (props.rowOffset * dimensions.historyMarginY) + props.theme.historyMarginBottom + 'px' : '0px'};\r\n`\r\n\r\nconst StageButton = styled(NiceButton)`\r\n  display: inline-block;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  padding: 3px;\r\n  line-height: 9px;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  border: ${props => props.disabled ? 'none' : (props.color || '#7986cb') + ' solid 1px'};\r\n  color: ${props => props.color || '#7986cb'};\r\n  margin-right: 5px;\r\n  font-size: 14px;\r\n  cursor: ${props => props.disabled ? 'default' : ''};\r\n\r\n  &:hover {\r\n    border: ${props => props.disabled ? 'none' : ''};\r\n    color: ${props => props.disabled ? (props.color || '#7986cb') : ''};\r\n  }\r\n`\r\n\r\nconst StageControls = styled.div`\r\n  text-align: center;\r\n`\r\n\r\nconst StageControl = styled.div`\r\n  margin: 5px 0;\r\n  display: inline-block;\r\n  width: 50%;\r\n`\r\n\r\nconst HistoryColumn = styled.div`\r\n  display: inline-block;\r\n  vertical-align:middle;\r\n  margin-right: 5px;\r\n  height: 100%;\r\n`\r\n\r\nconst HistoryCircle = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 50%;\r\n  margin-top: ${props => props.theme.historyCircleMarginTop + 'px'};\r\n  background-color: ${props => (props.isCheckout) ? props.theme.grey : props.theme.circleColors[props.columnNth % props.theme.circleColors.length]};\r\n  border: ${props => props.isCheckout ? props.theme.circleColors[props.columnNth % props.theme.circleColors.length] + ' solid 3px' : ''};\r\n  margin-left: ${props => props.isCheckout ? '' : props.theme.historyCircleBorderLeft + 'px'};\r\n  animation: ${fallDownAnimation} cubic-bezier(0.770, 0.000, 0.175, 1.000) 1s;\r\n  animation-fill-mode: forwards;\r\n  transform: translate(0,-45px);\r\n`\r\n\r\nconst HistoryControl = styled(HistoryColumn)`\r\n  width: ${props => props.theme.historyControlWidth + 'px'};\r\n`\r\n\r\nconst ConnectionsContainer = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: -10;\r\n`;\r\n\r\nexport class GitVisualisation extends Component {\r\n  state = {\r\n    nodeIds: [],\r\n    branchIds: [], \r\n  }\r\n\r\n  circles = {};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const branchId = shortid.generate();\r\n    const rootNodeId = shortid.generate();\r\n    const checkoutNodeId = shortid.generate();\r\n\r\n    const branch = new Branch(branchId, [rootNodeId, checkoutNodeId], 0, 0);\r\n    const rootNode = new Node(rootNodeId, {}, branchId, 0).commit().checkout();\r\n    const checkoutNode = new Node(checkoutNodeId, {[branchId]: rootNodeId}, branchId, 1);\r\n\r\n    this.state.branchIds.push(branchId);\r\n    this.state[branchId] = branch;\r\n    this.state.nodeIds.push(rootNodeId);\r\n    this.state[rootNodeId] = rootNode;\r\n    this.state.nodeIds.push(checkoutNodeId);\r\n    this.state[checkoutNodeId] = checkoutNode;\r\n    this.state.checkout = checkoutNodeId;\r\n  }\r\n  \r\n  commitNode(parentNodeId, branchId) {\r\n    this.setState((state, _) => { \r\n      const nodeId = shortid.generate();\r\n      const parentNodeRow = this.state[parentNodeId].row;\r\n      const grandParentNodeId = this.state[parentNodeId].parentNodeIds[branchId];\r\n      const node = new Node(nodeId, {[branchId]: parentNodeId}, branchId, parentNodeRow + 1);\r\n\r\n      return this.updateCheckout(state, {\r\n        [grandParentNodeId]: state[grandParentNodeId].childCommit(),\r\n        [parentNodeId]: state[parentNodeId].commit().checkout(),\r\n        [nodeId]: node,\r\n        [branchId]: state[branchId].addNode(nodeId),\r\n        nodeIds: [...state.nodeIds, nodeId],\r\n        checkout: nodeId,\r\n      });\r\n    });\r\n  }\r\n  branchNode(parentNodeId) {\r\n    const parentNode = this.state[parentNodeId];\r\n    const parentNodeRow = parentNode.row;\r\n\r\n    const branchId = shortid.generate();\r\n    const branchNodeId = shortid.generate();\r\n    const nodeId = shortid.generate();\r\n\r\n    const branch = new Branch(branchId, [branchNodeId, nodeId], parentNodeRow + 1, this.state.branchIds.length,);\r\n    const branchNode = new Node(branchNodeId, {[branchId]: parentNodeId}, branchId, parentNodeRow + 1).commit().checkout();\r\n    const node = new Node(nodeId, {[branchId]: branchNodeId}, branchId, parentNodeRow + 2);\r\n\r\n    this.setState((state, _) => this.updateCheckout(state, {\r\n      [parentNodeId]: parentNode.mergeTo(branchNode),\r\n      [branchId]: branch,\r\n      [branchNodeId]: branchNode,\r\n      [nodeId]: node,\r\n      branchIds: [...state.branchIds, branchId],\r\n      nodeIds: [...state.nodeIds, branchNodeId, nodeId],\r\n      checkout: nodeId,\r\n    }));\r\n  }\r\n  setCheckout(parentNodeId) {\r\n    this.setState((state, _) => {\r\n      const newNodeId = shortid.generate();\r\n      const parentNode = state[parentNodeId];\r\n      const branch = state[parentNode.branchId].addNode(newNodeId);\r\n      const newNode = new Node(newNodeId, {[branch.branchId]: parentNodeId}, branch.branchId, parentNode.row + 1);\r\n\r\n      return this.updateCheckout(state, {\r\n        checkout: newNodeId,\r\n        nodeIds: [...state.nodeIds, newNodeId],\r\n        [newNodeId]: newNode,\r\n        [branch.branchId]: branch.addNode(newNodeId),\r\n        [parentNodeId]: parentNode.checkout(),\r\n      })\r\n    });\r\n  }\r\n  updateCheckout(state, updateDict) {    \r\n    const currentCheckoutNode = state[state.checkout];\r\n    let currentCheckoutNodeParent = state[currentCheckoutNode.parentNodeIds[currentCheckoutNode.branchId]];\r\n    if (currentCheckoutNodeParent.nodeId in updateDict) {\r\n      currentCheckoutNodeParent = updateDict[currentCheckoutNodeParent.nodeId];\r\n    }\r\n    const currentCheckoutNodeBranch = state[currentCheckoutNode.branchId];\r\n\r\n    if (!(state.checkout in updateDict) || updateDict[state.checkout].state === NodeStateEnum.Created) {\r\n      updateDict[currentCheckoutNodeParent.nodeId] = currentCheckoutNodeParent.othersCheckout();\r\n      updateDict[currentCheckoutNode.nodeId] = undefined;\r\n    }\r\n    updateDict[currentCheckoutNodeBranch.branchId] = currentCheckoutNodeBranch.pop();\r\n\r\n    return updateDict;\r\n  } \r\n  mergeNode(mergeFromNodeId, mergeToNodeId) {\r\n    this.setState((state, _) => {       \r\n      const mergeFromNode = state[mergeFromNodeId];\r\n      const mergeToNode = state[mergeToNodeId].merge(mergeFromNode);\r\n      const mergeToBranch = state[mergeToNode.branchId];\r\n      const parentNodeIds = {[mergeToBranch.branchId]: mergeToNodeId}\r\n      const nodeId = shortid.generate();\r\n      const branchId = mergeToBranch.branchId;\r\n      const node = new Node(nodeId, parentNodeIds, branchId, mergeToNode.row + 1);\r\n      return this.updateCheckout(state, {\r\n        [mergeToNodeId]: mergeToNode,\r\n        [mergeFromNodeId]: mergeFromNode.mergeTo(mergeToNode),\r\n        [nodeId]: node,\r\n        nodeIds: [...state.nodeIds, nodeId],\r\n        [branchId]: state[branchId].addNode(nodeId),\r\n        checkout: nodeId,\r\n      });\r\n    });\r\n  }\r\n  addNodeCircleDom(nodeId, dom, row, column) {\r\n    this.circles[nodeId] = new Circle(nodeId, dom, row, column);\r\n  }\r\n  connectionsContainerRef(dom) {\r\n    this.connectionsContainer = dom;\r\n  }\r\n  drawConnections() {\r\n    const circlePairs = [];\r\n    Object.keys(this.circles).forEach(nodeId => {\r\n      const node = this.state[nodeId];\r\n      if (!node) return;\r\n      Object.values(node.parentNodeIds).forEach(parentNodeId => \r\n        circlePairs.push([this.circles[parentNodeId], this.circles[nodeId]])\r\n      );\r\n    });\r\n    const gitConnections = <GitConnections circlePairs={circlePairs}></GitConnections>\r\n    ReactDOM.render(gitConnections, this.connectionsContainer);\r\n  }\r\n\r\n  render() {\r\n    const $this = this;\r\n    const state = this.state;\r\n    const copyBranchHistoryNodes = {};\r\n    const checkoutBranchId = state[state.checkout].branchId;\r\n    state.nodeIds.forEach(nodeId => {\r\n      if (!state[nodeId]) return;\r\n      const node = state[nodeId];\r\n      const branchId = node.branchId;\r\n      const branch = state[branchId];\r\n      const parentNode = state[node.parentNodeIds[branchId]];\r\n      const rowOffset = (parentNode) ? node.row - parentNode.row - 1 : 0;\r\n      const historyNode = <HistoryNode \r\n        key={nodeId}\r\n        nodeId={nodeId}\r\n        onBranchNode={function() { $this.branchNode(nodeId); }}\r\n        onCommitNode={function() { $this.commitNode(nodeId, branchId); }}\r\n        onCheckout={function() { $this.setCheckout(nodeId); }}\r\n        onMerge={function() { $this.mergeNode(nodeId, state.checkout); }}\r\n        historyCircleRef={function (dom) { $this.addNodeCircleDom(nodeId, dom, node.row, branch.column); }}\r\n\r\n        isCheckout={state.checkout === nodeId}\r\n        isBranchable={true}\r\n        nodeState={node.state}\r\n        isMergable={!(node.mergedToBranch.has(checkoutBranchId)) && checkoutBranchId !== node.branchId}\r\n\r\n        columnNth={branch.column}\r\n        rowOffset={rowOffset}\r\n      ></HistoryNode>;\r\n      if (!(branchId in copyBranchHistoryNodes)) {\r\n        copyBranchHistoryNodes[branchId] = [];\r\n      }\r\n      copyBranchHistoryNodes[branchId].push(historyNode);\r\n    });\r\n    const branches = this.state.branchIds.map(branchId => this.state[branchId]);\r\n\r\n    return <Git>\r\n      <ConnectionsContainer ref={this.connectionsContainerRef.bind(this)}></ConnectionsContainer>\r\n      <GitTable copyBranchHistoryNodes={copyBranchHistoryNodes} branches={branches}></GitTable>\r\n    </Git>\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.drawConnections();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.drawConnections();\r\n  }\r\n}\r\n\r\n\r\nclass GitTable extends Component {\r\n  render() {\r\n    const copyBranchHistoryNodes = this.props.copyBranchHistoryNodes;\r\n    const branches = this.props.branches;\r\n    return branches.map((branches, index) => {\r\n      const branchId = branches.branchId;\r\n      const rowOffset = branches.rowOffset;\r\n      return <Copy key={branchId} rowOffset={rowOffset} nth={index}>\r\n        {copyBranchHistoryNodes[branchId]}\r\n      </Copy>\r\n    });\r\n  }\r\n}\r\n\r\nclass HistoryNode extends Component {\r\n  state = { \r\n    adds: 0,\r\n    deletes: 0,\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.onBranch = this.onBranch.bind(this);\r\n    this.onCommit = this.onCommit.bind(this);\r\n    this.onCheckout = this.onCheckout.bind(this);\r\n    this.onMerge = this.onMerge.bind(this);\r\n    this.onAdd = this.onAdd.bind(this);\r\n    this.onDelete = this.onDelete.bind(this);\r\n  }\r\n\r\n  onBranch() {\r\n    this.props.onBranchNode();\r\n  }\r\n\r\n  onCommit() {\r\n    this.props.onCommitNode();\r\n  }\r\n\r\n  onCheckout() {\r\n    this.props.onCheckout();\r\n  }\r\n\r\n  onMerge() {\r\n    this.props.onMerge();\r\n  }\r\n\r\n  onAdd() {\r\n    this.setState((state, _) => ({\r\n      adds: state.adds + 1,\r\n    }));\r\n  }\r\n\r\n  onDelete() {\r\n    this.setState((state, _) => ({\r\n      deletes: state.deletes + 1,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const isClosedForChanges = this.props.nodeState !== NodeStateEnum.Created;\r\n    const commitForm = (!isClosedForChanges && (this.state.adds + this.state.deletes)) ?\r\n      <CommitForm onClick={this.onCommit}></CommitForm> :\r\n      <div></div>\r\n\r\n    return <History rowOffset={this.props.rowOffset}>\r\n      <HistoryColumn>\r\n        <HistoryCircle \r\n          ref={this.props.historyCircleRef} \r\n          columnNth={this.props.columnNth} \r\n          isCheckout={this.props.nodeState === NodeStateEnum.Created}\r\n        >\r\n        </HistoryCircle>\r\n      </HistoryColumn>\r\n      <HistoryControl>\r\n        <FileChangesForm \r\n          isHidden={isClosedForChanges}\r\n          adds={this.state.adds}\r\n          deletes={this.state.deletes}\r\n\r\n          onAdd={this.onAdd}\r\n          onDelete={this.onDelete}></FileChangesForm>\r\n        {commitForm}\r\n        <BranchForm onClick={this.onBranch} isHidden={!this.props.isBranchable || this.props.nodeState === NodeStateEnum.Created}></BranchForm>\r\n        <MergeForm onClick={this.onMerge} isHidden={!this.props.isMergable || this.props.nodeState === NodeStateEnum.Created || this.props.nodeState === NodeStateEnum.MakingChanges}></MergeForm>\r\n        <CheckoutForm \r\n          onClick={this.onCheckout}\r\n          isHidden={this.props.nodeState !== NodeStateEnum.OpenToChanges}></CheckoutForm>\r\n      </HistoryControl>\r\n    </History>;\r\n  }\r\n}\r\n\r\nclass FileChangesForm extends Component {\r\n  onAdd() {\r\n    if (this.props.isHidden) return;\r\n    this.props.onAdd();\r\n  }\r\n  \r\n  onDelete() {\r\n    if (this.props.isHidden) return;\r\n    this.props.onDelete();\r\n  }\r\n  \r\n  render() {\r\n    const isControlsHidden = this.props.isHidden;\r\n    const changeCount = <StageControls>\r\n      <StageAddForm onClick={this.onAdd.bind(this)} count={this.props.adds} isControlsHidden={isControlsHidden}></StageAddForm>\r\n      <StageDeleteForm onClick={this.onDelete.bind(this)} count={this.props.deletes} isControlsHidden={isControlsHidden}></StageDeleteForm>\r\n    </StageControls>\r\n    \r\n    return <div>\r\n      { changeCount }\r\n    </div>\r\n  }\r\n}\r\n\r\nclass BranchForm extends ButtonForm {\r\n  buttonName = 'Branch';\r\n}\r\n\r\nclass CommitForm extends ButtonForm {\r\n  buttonName = 'Commit';\r\n}\r\n\r\nclass CheckoutForm extends ButtonForm {\r\n  buttonName = 'Checkout';\r\n}\r\n\r\nclass MergeForm extends ButtonForm {\r\n  buttonName = 'Merge';\r\n}\r\n\r\nclass StageForm extends ButtonForm {\r\n  buttonName = '?';\r\n  color = undefined;\r\n\r\n  render() {\r\n    if (this.props.isHidden) {\r\n      return <div></div>\r\n    }\r\n    let stageButton = <StageButton onClick={this.props.onClick} color={this.color} disabled>{this.buttonName}</StageButton>;\r\n    if (!this.props.isControlsHidden) {\r\n      stageButton = <StageButton onClick={this.props.onClick} color={this.color}>{this.buttonName}</StageButton>\r\n    }\r\n    return <StageControl>\r\n      {stageButton}\r\n      {this.props.count}\r\n    </StageControl>\r\n  }\r\n}\r\n\r\nclass StageAddForm extends StageForm {\r\n  buttonName = '+';\r\n  color = 'mediumseagreen';\r\n}\r\n\r\nclass StageDeleteForm extends StageForm {\r\n  buttonName = '-';\r\n  color = 'palevioletred';\r\n}","import React, {Component} from 'react';\nimport {ThemeProvider} from 'styled-components';\nimport {theme} from './commons';\nimport {GitVisualisation} from './GitVisualisation';\n\nclass App extends Component {\n  render() {\n    return <ThemeProvider theme={theme}>\n      <GitVisualisation></GitVisualisation>\n    </ThemeProvider>\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}